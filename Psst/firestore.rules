rules_version = '2';

// Firestore Security Rules for Psst Messaging App
// Created by Caleb (Coder Agent) - PR #17

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can read all, but only update their own
    match /users/{userId} {
      // Anyone authenticated can read user profiles
      allow read: if request.auth != null;
      
      // Users can create their own profile during signup
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Users can update their own profile
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Users cannot delete profiles
      allow delete: if false;
    }
    
    // Chats collection
    match /chats/{chatId} {
      // Users can read chats they're a member of
      allow read: if request.auth != null && 
                     request.auth.uid in resource.data.members;
      
      // Users can create chats if they're in the members list
      allow create: if request.auth != null && 
                       request.auth.uid in request.resource.data.members;
      
      // Members can update chat metadata
      allow update: if request.auth != null && 
                       request.auth.uid in resource.data.members;
      
      // Messages subcollection
      match /messages/{messageId} {
        // Members can read messages in their chats
        allow read: if request.auth != null && 
                       request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        
        // Members can create messages in their chats
        allow create: if request.auth != null && 
                         request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members &&
                         request.auth.uid == request.resource.data.senderID;
        
        // Senders can update their own messages (for read receipts, status, etc.)
        allow update: if request.auth != null && 
                         request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
      }
    }
  }
}

